// File: control.v
// Generated by MyHDL 0.11
// Date: Fri Nov 26 23:50:08 2021


`timescale 1ns/10ps

module control (
    opcode,
    func3,
    func7,
    branch_result,
    size_sel,
    operation_sel,
    enable_write,
    PC_genrator_sel,
    imm_sel,
    rs2_or_imm_or_4,
    PC_or_Address,
    PC_or_rs1,
    ALU_or_load_or_immShiftedBy12
);


input [6:0] opcode;
input [4:0] func3;
input [4:0] func7;
input [31:0] branch_result;
output [1:0] size_sel;
reg [1:0] size_sel;
output [3:0] operation_sel;
reg [3:0] operation_sel;
output enable_write;
reg enable_write;
output [1:0] PC_genrator_sel;
reg [1:0] PC_genrator_sel;
output [31:0] imm_sel;
reg [31:0] imm_sel;
output [1:0] rs2_or_imm_or_4;
reg [1:0] rs2_or_imm_or_4;
output PC_or_Address;
reg PC_or_Address;
output PC_or_rs1;
reg PC_or_rs1;
output [1:0] ALU_or_load_or_immShiftedBy12;
reg [1:0] ALU_or_load_or_immShiftedBy12;




always @(func3, opcode, func7, branch_result) begin: CONTROL_CONTROL_CIR
    size_sel = 0;
    enable_write = 0;
    PC_genrator_sel = 0;
    imm_sel = 0;
    rs2_or_imm_or_4 = 0;
    PC_or_Address = 0;
    PC_or_rs1 = 0;
    ALU_or_load_or_immShiftedBy12 = 0;
    case (opcode)
        'h33: begin
            size_sel = 2;
            enable_write = 0;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 0;
            PC_or_Address = 0;
            PC_or_rs1 = 1;
            ALU_or_load_or_immShiftedBy12 = 0;
            if (((func3 == 0) && (func7 == 0))) begin
                operation_sel = 0;
            end
            else if (((func3 == 4) && (func7 == 0))) begin
                operation_sel = 5;
            end
            else if (((func3 == 6) && (func7 == 0))) begin
                operation_sel = 4;
            end
            else if (((func3 == 7) && (func7 == 0))) begin
                operation_sel = 3;
            end
            else if (((func3 == 1) && (func7 == 0))) begin
                operation_sel = 6;
            end
            else if (((func3 == 5) && (func7 == 0))) begin
                operation_sel = 7;
            end
            else if (((func3 == 5) && (func7 == 32))) begin
                operation_sel = 7;
            end
            else if (((func3 == 2) && (func7 == 0))) begin
                operation_sel = 10;
            end
            else if (((func3 == 3) && (func7 == 0))) begin
                operation_sel = 10;
            end
            else if (((func3 == 0) && (func7 == 1))) begin
                operation_sel = 1;
            end
            else if (((func3 == 4) && (func7 == 1))) begin
                operation_sel = 2;
            end
            else if (((func3 == 5) && (func7 == 1))) begin
                operation_sel = 2;
            end
            else if (((func3 == 6) && (func7 == 1))) begin
                operation_sel = 12;
            end
            else begin
                operation_sel = 12;
            end
        end
        'h13: begin
            size_sel = 2;
            enable_write = 0;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 1;
            PC_or_Address = 0;
            PC_or_rs1 = 1;
            ALU_or_load_or_immShiftedBy12 = 0;
            if ((func3 == 0)) begin
                operation_sel = 0;
            end
            else if ((func3 == 4)) begin
                operation_sel = 5;
            end
            else if ((func3 == 6)) begin
                operation_sel = 4;
            end
            else if ((func3 == 7)) begin
                operation_sel = 3;
            end
            else if (((func3 == 1) && (func7 == 0))) begin
                operation_sel = 12;
            end
            else if (((func3 == 5) && (func7 == 0))) begin
                operation_sel = 13;
            end
            else if (((func3 == 5) && (func7 == 32))) begin
                operation_sel = 14;
            end
            else if ((func3 == 2)) begin
                operation_sel = 10;
            end
            else begin
                operation_sel = 10;
            end
        end
        'h3: begin
            enable_write = 0;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 1;
            PC_or_Address = 1;
            PC_or_rs1 = 1;
            ALU_or_load_or_immShiftedBy12 = 1;
            case (func3)
                'h0: begin
                    size_sel = 0;
                    operation_sel = 0;
                end
                'h1: begin
                    size_sel = 1;
                    operation_sel = 0;
                end
                'h2: begin
                    size_sel = 2;
                    operation_sel = 0;
                end
                'h4: begin
                    size_sel = 0;
                    operation_sel = 0;
                end
                default: begin
                    size_sel = 1;
                    operation_sel = 0;
                end
            endcase
        end
        'h23: begin
            enable_write = 1;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 1;
            PC_or_Address = 1;
            PC_or_rs1 = 1;
            ALU_or_load_or_immShiftedBy12 = 1;
            case (func3)
                'h0: begin
                    size_sel = 0;
                    operation_sel = 0;
                end
                'h1: begin
                    size_sel = 1;
                    operation_sel = 0;
                end
                default: begin
                    size_sel = 2;
                    operation_sel = 0;
                end
            endcase
        end
        'h63: begin
            size_sel = 2;
            enable_write = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 0;
            PC_or_Address = 0;
            PC_or_rs1 = 1;
            ALU_or_load_or_immShiftedBy12 = 0;
            case (func3)
                'h0: begin
                    operation_sel = 8;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
                'h1: begin
                    operation_sel = 9;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
                'h4: begin
                    operation_sel = 10;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
                'h5: begin
                    operation_sel = 11;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
                'h6: begin
                    operation_sel = 10;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
                default: begin
                    operation_sel = 11;
                    if ((branch_result == 1)) begin
                        PC_genrator_sel = 1;
                    end
                    else begin
                        PC_genrator_sel = 0;
                    end
                end
            endcase
        end
        'h6f: begin
            size_sel = 2;
            operation_sel = 0;
            enable_write = 0;
            PC_genrator_sel = 1;
            imm_sel = 0;
            rs2_or_imm_or_4 = 2;
            PC_or_Address = 0;
            PC_or_rs1 = 0;
            ALU_or_load_or_immShiftedBy12 = 0;
        end
        'h67: begin
            size_sel = 2;
            operation_sel = 0;
            enable_write = 0;
            PC_genrator_sel = 1;
            imm_sel = 0;
            rs2_or_imm_or_4 = 2;
            PC_or_Address = 0;
            PC_or_rs1 = 0;
            ALU_or_load_or_immShiftedBy12 = 0;
        end
        'h37: begin
            size_sel = 2;
            operation_sel = 0;
            enable_write = 0;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 0;
            PC_or_Address = 0;
            PC_or_rs1 = 0;
            ALU_or_load_or_immShiftedBy12 = 2;
        end
        default: begin
            size_sel = 2;
            operation_sel = 0;
            enable_write = 0;
            PC_genrator_sel = 0;
            imm_sel = 0;
            rs2_or_imm_or_4 = 1;
            PC_or_Address = 0;
            PC_or_rs1 = 0;
            ALU_or_load_or_immShiftedBy12 = 0;
        end
    endcase
end

endmodule
