// File: extender.v
// Generated by MyHDL 0.11
// Date: Fri Nov 26 23:36:05 2021


`timescale 1ns/10ps

module extender (
    sel,
    immI,
    immS,
    immB,
    immU,
    immJ,
    imm32
);


input [2:0] sel;
input [11:0] immI;
input [11:0] immS;
input [11:0] immB;
input [19:0] immU;
input [19:0] immJ;
output [31:0] imm32;
reg [31:0] imm32;




always @(immS, sel, immJ, immB, immU, immI) begin: EXTENDER_EXTENDER
    imm32 = 0;
    case (sel)
        'h0: begin
            imm32[32-1:0] = $signed(immI[12-1:0]);
        end
        'h1: begin
            imm32[32-1:0] = immI[12-1:0];
        end
        'h2: begin
            imm32[32-1:0] = $signed(immS[12-1:0]);
        end
        'h3: begin
            imm32[32-1:0] = ($signed(immB[12-1:0]) << 1);
        end
        'h4: begin
            imm32[32-1:0] = (immB[12-1:0] << 1);
        end
        'h5: begin
            imm32[32-1:0] = ($signed(immU[20-1:0]) << 12);
        end
        'h6: begin
            imm32[32-1:0] = $signed(immJ[20-1:0]);
        end
    endcase
end

endmodule
